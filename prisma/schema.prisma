// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  email String @unique @db.VarChar(255)

  password String @db.VarChar(255)

  roles Json @db.JsonB

  Ovz     Ovz?
  Company Company?
}

model Ovz {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  sex             String @db.VarChar(255)
  educationLevel  String @db.VarChar(255)
  disabilityGroup String @db.VarChar(255)

  educationProffesion String? @db.VarChar(255)

  disabilities      Json @db.JsonB
  targetProffesions Json @db.JsonB
  workExperience    Json @db.JsonB

  birthDate DateTime

  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique @map("user_id")
  location   Location @relation(fields: [locationId], references: [id])
  locationId String
  Resume     Resume[]

  @@index([locationId])
}

model Company {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  name String @db.VarChar(255)
  inn  String @db.VarChar(255)

  vacancies Vacancy[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")
}

model Location {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  type        String @db.VarChar(255)
  name        String @db.VarChar(255)
  street      String @db.VarChar(255)
  houseNumber String @map("house_number") @db.VarChar(255)

  ovz       Ovz[]
  vacancies Vacancy[]
}

model Vacancy {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  name               String @db.VarChar(255)
  requiredExperience String @map("required_experience") @db.VarChar(255)
  description        String @db.Text
  educationLevel     String @map("education_level") @db.VarChar(255)
  workSchedule       String @map("work_schedule") @db.VarChar(255)

  salary String? @db.VarChar(255)

  location   Location @relation(fields: [locationId], references: [id])
  locationId String   @map("location_id")

  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @map("company_id")

  @@index([locationId])
  @@index([companyId])
}

model Resume {
  id        String    @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  name         String @db.VarChar(255)
  workSchedule String @map("work_schedule") @db.VarChar(255)

  ovz   Ovz    @relation(fields: [ovzId], references: [id])
  ovzId String @db.VarChar(36)

  @@index([ovzId])
}
